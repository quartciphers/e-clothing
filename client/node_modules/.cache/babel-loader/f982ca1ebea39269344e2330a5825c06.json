{"ast":null,"code":"var _jsxFileName = \"/home/qc/RayDcode/React/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React, { Component } from 'react';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport { Route } from 'react-router-dom';\nimport CollectionPage from '../collection/collection.component';\nimport { connect } from 'react-redux';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utlis';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionsOverviewWithSpinner;\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nclass ShopPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubricbeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async (snapshot) => {\n      const collectionMap = convertCollectionSnapshotToMap(snapshot);\n      updateCollections(collectionMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsOverviewWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 75\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 83\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionsOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["/home/qc/RayDcode/React/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Component","CollectionsOverview","Route","CollectionPage","connect","firestore","convertCollectionSnapshotToMap","updateCollections","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","state","loading","unsubricbeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionMap","setState","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,EAAkBC,8BAAlB,QAAuD,+BAAvD;AACA,SAAQC,iBAAR,QAAgC,+BAAhC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;;AAGA,MAAMC,8BAA8B,GAAGD,WAAW,CAACP,mBAAD,CAAlD;KAAMQ,8B;AACN,MAAMC,yBAAyB,GAAGF,WAAW,CAACL,cAAD,CAA7C;MAAMO,yB;;AAKN,MAAMC,QAAN,SAAuBX,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAEzBY,KAFyB,GAEjB;AACJC,MAAAA,OAAO,EAAE;AADL,KAFiB;AAAA,SAO7BC,sBAP6B,GAOJ,IAPI;AAAA;;AAS7BC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAACR,MAAAA;AAAD,QAAsB,KAAKS,KAAjC;AACA,UAAMC,aAAa,GAAGZ,SAAS,CAACa,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,OAIrBC,QAJqB,KAIR;AAEf,YAAMC,aAAa,GAAGf,8BAA8B,CAACc,QAAD,CAApD;AACCb,MAAAA,iBAAiB,CAACc,aAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACT,QAAAA,OAAO,EAAC;AAAT,OAAd;AACF,KATD;AAcH;;AAEGU,EAAAA,MAAM,GAAG;AAIL,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKR,KAArB;AACA,UAAM;AAACH,MAAAA;AAAD,QAAY,KAAKD,KAAvB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEY,KAAK,CAACC,IAAK,EAAjC;AAAoC,QAAA,MAAM,EAAGT,KAAD,iBAAU,QAAC,8BAAD;AAAgC,UAAA,SAAS,EAAEH,OAA3C;AAAA,aAAuDG;AAAvD;AAAA;AAAA;AAAA;AAAA;AAAtD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,gBAA3B;AAA4C,QAAA,MAAM,EAAIT,KAAD,iBAAS,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAEH,OAAtC;AAAA,aAAkDG;AAAlD;AAAA;AAAA;AAAA;AAAA;AAA9D;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOX;;AA1CgC;;AA8CjC,MAAMU,kBAAkB,GAAGC,QAAQ,KAAK;AAEpCpB,EAAAA,iBAAiB,EAAGqB,cAAc,IAAID,QAAQ,CAACpB,iBAAiB,CAACqB,cAAD,CAAlB;AAFV,CAAL,CAAnC;;AAOA,eAAexB,OAAO,CAAC,IAAD,EAAMsB,kBAAN,CAAP,CAAkCf,QAAlC,CAAf","sourcesContent":["import React,{Component} from 'react';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component'\nimport {Route} from 'react-router-dom';\nimport CollectionPage from '../collection/collection.component';\nimport {connect} from 'react-redux';\nimport {firestore,convertCollectionSnapshotToMap} from '../../firebase/firebase.utlis';\nimport {updateCollections} from '../../redux/shop/shop.actions';\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\n\n\n\nclass ShopPage extends Component {\n     \n        state = {\n            loading: true,\n        }\n\n\n    unsubricbeFromSnapshot = null;\n   \n    componentDidMount(){\n        const {updateCollections} = this.props;\n        const collectionRef = firestore.collection('collections');\n         \n        collectionRef.onSnapshot(async (\n            \n            \n            \n            snapshot) => {\n\n          const collectionMap = convertCollectionSnapshotToMap(snapshot);\n           updateCollections(collectionMap);\n           this.setState({loading:false});\n        });\n      \n\n\n\n    }\n\n        render() {\n\n             \n\n            const {match} = this.props;\n            const {loading} = this.state;\n            return(\n                <div className=\"shop-page\">\n                    <Route exact path={`${match.path}`} render={(props)=> <CollectionsOverviewWithSpinner isLoading={loading}{...props}/>}/>\n                    <Route path={`${match.path}/:collectionId`} render ={(props)=><CollectionPageWithSpinner isLoading={loading}{...props}/>}/>\n            </div>\n        )\n   \n}\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n\n    updateCollections : collectionsMap => dispatch(updateCollections(collectionsMap))\n})\n\n\n\nexport default connect(null,mapDispatchToProps) (ShopPage);"]},"metadata":{},"sourceType":"module"}