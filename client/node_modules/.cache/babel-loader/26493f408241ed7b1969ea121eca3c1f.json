{"ast":null,"code":"var _jsxFileName = \"/home/qc/RayDcode/React/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React, { Component } from 'react';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport CollectionPage from '../collection/collection.component';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selector';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionsOverviewWithSpinner;\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nclass ShopPage extends Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsOverviewWithSpinner, {\n          isLoading: isCollectionFetching,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 75\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: isCollectionFetching,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 83\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isColle\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionsOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["/home/qc/RayDcode/React/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Component","CollectionsOverview","Route","createStructuredSelector","CollectionPage","connect","fetchCollectionsStartAsync","selectIsCollectionFetching","selectIsCollectionsLoaded","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","componentDidMount","props","render","match","isCollectionFetching","path","mapStateToProps","isColle","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,0BAAR,QAAyC,+BAAzC;AAEA,SAASC,0BAAT,EAAoCC,yBAApC,QAAqE,gCAArE;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;;AAGA,MAAMC,8BAA8B,GAAGD,WAAW,CAACR,mBAAD,CAAlD;KAAMS,8B;AACN,MAAMC,yBAAyB,GAAGF,WAAW,CAACL,cAAD,CAA7C;MAAMO,yB;;AAKN,MAAMC,QAAN,SAAuBZ,SAAvB,CAAiC;AAI7Ba,EAAAA,iBAAiB,GAAE;AAEb,UAAM;AAACP,MAAAA;AAAD,QAA+B,KAAKQ,KAA1C;AAGAR,IAAAA,0BAA0B;AAG5B;;AAEAS,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,KAAD;AAAOC,MAAAA;AAAP,QAA+B,KAAKH,KAA1C;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAAjC;AAAoC,QAAA,MAAM,EAAGJ,KAAD,iBAAU,QAAC,8BAAD;AAAgC,UAAA,SAAS,EAAEG,oBAA3C;AAAA,aAAoEH;AAApE;AAAA;AAAA;AAAA;AAAA;AAAtD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,gBAA3B;AAA4C,QAAA,MAAM,EAAIJ,KAAD,iBAAS,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAEG,oBAAtC;AAAA,aAA+DH;AAA/D;AAAA;AAAA;AAAA;AAAA;AAA9D;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOX;;AAxBgC;;AA4BjC,MAAMK,eAAe,GAAGhB,wBAAwB,CAAC;AAC7Cc,EAAAA,oBAAoB,EAAEV,0BADuB;AAE7Ca,EAAAA;AAF6C,CAAD,CAAhD;;AAKA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AAEpChB,EAAAA,0BAA0B,EAAC,MAAKgB,QAAQ,CAAChB,0BAA0B,EAA3B;AAFJ,CAAL,CAAnC;;AAOA,eAAeD,OAAO,CAACc,eAAD,EAAiBE,kBAAjB,CAAP,CAA6CT,QAA7C,CAAf","sourcesContent":["import React,{Component} from 'react';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component'\nimport {Route} from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport CollectionPage from '../collection/collection.component';\nimport {connect} from 'react-redux';\nimport {fetchCollectionsStartAsync} from '../../redux/shop/shop.actions';\n\nimport { selectIsCollectionFetching,selectIsCollectionsLoaded } from '../../redux/shop/shop.selector';\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\n\n  \n\nclass ShopPage extends Component {\n     \n      \n   \n    componentDidMount(){\n           \n          const {fetchCollectionsStartAsync} = this.props;\n\n          \n          fetchCollectionsStartAsync();\n\n         \n       }\n\n        render() {\n            const {match,isCollectionFetching} = this.props;\n           \n            return(\n                <div className=\"shop-page\">\n                    <Route exact path={`${match.path}`} render={(props)=> <CollectionsOverviewWithSpinner isLoading={isCollectionFetching}{...props}/>}/>\n                    <Route path={`${match.path}/:collectionId`} render ={(props)=><CollectionPageWithSpinner isLoading={isCollectionFetching}{...props}/>}/>\n            </div>\n        )\n   \n}\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n    isCollectionFetching: selectIsCollectionFetching,\n    isColle\n})\n\nconst mapDispatchToProps = dispatch => ({\n\n    fetchCollectionsStartAsync:()=> dispatch(fetchCollectionsStartAsync())\n})\n\n\n\nexport default connect(mapStateToProps,mapDispatchToProps) (ShopPage);"]},"metadata":{},"sourceType":"module"}