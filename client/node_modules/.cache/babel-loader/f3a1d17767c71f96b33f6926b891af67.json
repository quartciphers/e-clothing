{"ast":null,"code":"var _jsxFileName = \"/home/qc/RayDcode/React/crwn-clothing/src/components/sign-in/sign-in.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './sign-in.style.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { connect } from 'react-redux';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignInComponent = ({\n  googleSignInStart,\n  emailSignInStart\n}) => {\n  _s();\n\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"I already have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        value: email,\n        label: \"email\",\n        handleChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"password\",\n        type: \"password\",\n        value: password,\n        label: \"password\",\n        handleChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \" Sign IN \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          onClick: googleSignInStart,\n          isGoogleButton: true,\n          children: \" Sign IN with Google \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignInComponent, \"SnsEHIESzo772eYzJRrBZvxMw/o=\");\n\n_c = SignInComponent;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignInComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInComponent\");","map":{"version":3,"sources":["/home/qc/RayDcode/React/crwn-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","FormInput","CustomButton","connect","googleSignInStart","emailSignInStart","SignInComponent","userCredentials","setCredentials","email","password","handleSubmit","e","preventDefault","handleChange","value","name","target","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAO,sBAAP;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAAQC,iBAAR,EAA0BC,gBAA1B,QAAiD,+BAAjD;;;AAIA,MAAMC,eAAe,GAAG,CAAC;AAACF,EAAAA,iBAAD;AAAmBC,EAAAA;AAAnB,CAAD,KAA0C;AAAA;;AAEhE,QAAK,CAACE,eAAD,EAAiBC,cAAjB,IAAmCR,QAAQ,CAAC;AAACS,IAAAA,KAAK,EAAC,EAAP;AAAUC,IAAAA,QAAQ,EAAC;AAAnB,GAAD,CAAhD;AACA,QAAM;AAACD,IAAAA,KAAD;AAAOC,IAAAA;AAAP,MAAmBH,eAAzB;;AAEA,QAAQI,YAAY,GAAG,MAAOC,CAAP,IAAW;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACAR,IAAAA,gBAAgB,CAACI,KAAD,EAAQC,QAAR,CAAhB;AACJ,GAHH;;AAKA,QAAQI,YAAY,GAAEF,CAAD,IAAK;AACtB,UAAM;AAACG,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAgBJ,CAAC,CAACK,MAAxB;AAEAT,IAAAA,cAAc,CAAC,EAAC,GAAGD,eAAJ;AAAoB,OAACS,IAAD,GAASD;AAA7B,KAAD,CAAd;AACD,GAJH;;AAKE,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AAAM,MAAA,QAAQ,EAAEJ,YAAhB;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,IAAI,EAAC,OAAhB;AAAwB,QAAA,IAAI,EAAC,OAA7B;AAAqC,QAAA,KAAK,EAAEF,KAA5C;AACA,QAAA,KAAK,EAAC,OADN;AAEA,QAAA,YAAY,EAAEK,YAFd;AAIA,QAAA,QAAQ;AAJR;AAAA;AAAA;AAAA;AAAA,cADJ,eAOK,QAAC,SAAD;AAAW,QAAA,IAAI,EAAC,UAAhB;AAA2B,QAAA,IAAI,EAAC,UAAhC;AAA2C,QAAA,KAAK,EAAEJ,QAAlD;AACA,QAAA,KAAK,EAAC,UADN;AAED,QAAA,YAAY,EAAEI,YAFb;AAIA,QAAA,QAAQ;AAJR;AAAA;AAAA;AAAA;AAAA,cAPL,eAaA;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACK,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADL,eAEK,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,QAAnB;AAA4B,UAAA,OAAO,EAAEV,iBAArC;AAAwD,UAAA,cAAc,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFL;AAAA;AAAA;AAAA;AAAA;AAAA,cAbA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,CA1CD;;GAAME,e;;KAAAA,e;;AA6CN,MAAMY,kBAAkB,GAAGC,QAAQ,KAAI;AAClCf,EAAAA,iBAAiB,EAAG,MAAKe,QAAQ,CAACf,iBAAiB,EAAlB,CADC;AAElCC,EAAAA,gBAAgB,EAAG,CAACI,KAAD,EAAOC,QAAP,KAAmBS,QAAQ,CAACd,gBAAgB,CAAC;AAACI,IAAAA,KAAD;AAAOC,IAAAA;AAAP,GAAD,CAAjB;AAFZ,CAAJ,CAAnC;;AAMA,eAAeP,OAAO,CAAC,IAAD,EAAMe,kBAAN,CAAP,CAAiCZ,eAAjC,CAAf","sourcesContent":["import React,{useState} from 'react';\nimport './sign-in.style.scss'\nimport FormInput from '../form-input/form-input.component'\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport {connect} from 'react-redux';\n\nimport {googleSignInStart,emailSignInStart} from '../../redux/user/user.actions';\n\n\n\nconst SignInComponent = ({googleSignInStart,emailSignInStart}) => {\n\n  const[userCredentials,setCredentials] = useState({email:'',password:'',});\n  const {email,password} = userCredentials;\n\n  const   handleSubmit = async (e)=>{\n         e.preventDefault();\n         emailSignInStart(email, password);\n    }\n\n  const   handleChange=(e)=>{\n      const {value ,name} = e.target;\n\n      setCredentials({...userCredentials,[name] : value})\n    }\n    return (\n        <div className='sign-in'>\n            <h2 className='title'>I already have an account</h2>\n            <span>Sign in with your email and Password</span>\n\n            <form onSubmit={handleSubmit}>\n                <FormInput name='email' type='email' value={email}\n                label='email'\n                handleChange={handleChange}\n                \n                required/>\n                 \n                 <FormInput name='password' type='password' value={password}\n                 label='password'\n                handleChange={handleChange}\n                 \n                 required/>\n                \n            <div className='buttons'>\n                 <CustomButton type='submit' > Sign IN </CustomButton>\n                 <CustomButton type=\"button\" onClick={googleSignInStart} isGoogleButton > Sign IN with Google </CustomButton>\n            </div>\n            </form>\n           \n        </div>\n    )\n\n}\n\n\nconst mapDispatchToProps = dispatch=> ({\n     googleSignInStart : ()=> dispatch(googleSignInStart()),\n     emailSignInStart : (email,password)=> dispatch(emailSignInStart({email,password})),\n})\n\n\nexport default connect(null,mapDispatchToProps)(SignInComponent)"]},"metadata":{},"sourceType":"module"}