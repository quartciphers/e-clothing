{"ast":null,"code":"import { ShopActionTypes } from './shop.types';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utlis';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: error\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionMap = convertCollectionSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionMap));\n    }).catch(error => {\n      dispatch(fetchCollectionsFailure(error.message));\n    });\n  };\n};","map":{"version":3,"sources":["/home/qc/RayDcode/React/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","error","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","message"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,cAA9B;AACA,SAASC,SAAT,EAAmBC,8BAAnB,QAAyD,+BAAzD;AAEA,OAAO,MAAOC,qBAAqB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADkB,CAAP,CAA/B;AAIP,OAAO,MAAMC,uBAAuB,GAAIC,aAAD,KAAoB;AACtDH,EAAAA,IAAI,EAACJ,eAAe,CAACQ,yBADiC;AAEtDC,EAAAA,OAAO,EAAEF;AAF6C,CAApB,CAAhC;AAMP,OAAO,MAAMG,uBAAuB,GAAIC,YAAD,KAAmB;AAEvDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBAFiC;AAGvDH,EAAAA,OAAO,EAAEI;AAH8C,CAAnB,CAAhC;AASP,OAAO,MAAMC,0BAA0B,GAAE,MAAI;AACxC,SAAOC,QAAQ,IAAI;AACd,UAAMC,aAAa,GAAGf,SAAS,CAACgB,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACZ,qBAAqB,EAAtB,CAAR;AACFa,IAAAA,aAAa,CAACE,GAAd,GACCC,IADD,CACMC,QAAQ,IAAG;AAEV,YAAMb,aAAa,GAAGL,8BAA8B,CAACkB,QAAD,CAApD;AACEL,MAAAA,QAAQ,CAACT,uBAAuB,CAACC,aAAD,CAAxB,CAAR;AAEF,KANP,EAOCc,KAPD,CAOOR,KAAK,IAAG;AAEPE,MAAAA,QAAQ,CAACL,uBAAuB,CAACG,KAAK,CAACS,OAAP,CAAxB,CAAR;AAED,KAXP;AAaF,GAhBD;AAkBJ,CAnBM","sourcesContent":["import {ShopActionTypes} from './shop.types';\nimport { firestore,convertCollectionSnapshotToMap } from '../../firebase/firebase.utlis';\n\nexport const  fetchCollectionsStart = () => ({\n     type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\n\nexport const fetchCollectionsSuccess = (collectionMap) => ({\n     type:ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n     payload: collectionMap\n});\n\n\nexport const fetchCollectionsFailure = (errorMessage) => ({\n\n   type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n   payload: error\n\n});\n\n\n\nexport const fetchCollectionsStartAsync =()=>{\n     return dispatch => {\n          const collectionRef = firestore.collection('collections');\n          dispatch(fetchCollectionsStart());\n        collectionRef.get()\n        .then(snapshot =>{\n\n               const collectionMap = convertCollectionSnapshotToMap(snapshot);\n                 dispatch(fetchCollectionsSuccess(collectionMap));\n         \n              })\n        .catch(error =>{\n\n                dispatch(fetchCollectionsFailure(error.message));\n                  \n              });\n\n     }\n\n}\n\n"]},"metadata":{},"sourceType":"module"}