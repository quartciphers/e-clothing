{"ast":null,"code":"var _jsxFileName = \"/home/qc/RayDcode/React/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React, { Component } from 'react';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport { Route } from 'react-router-dom';\nimport CollectionPage from '../collection/collection.component';\nimport { connect } from 'react-redux';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utlis';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ShopPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubricbeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionMap = convertCollectionSnapshotToMap(snapshot);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        component: CollectionsOverview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        component: CollectionPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections)\n});\n\nexport default ShopPage;","map":{"version":3,"sources":["/home/qc/RayDcode/React/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Component","CollectionsOverview","Route","CollectionPage","connect","firestore","convertCollectionSnapshotToMap","updateCollections","ShopPage","unsubricbeFromSnapshot","componentDidMount","collectionRef","collection","onSnapshot","snapshot","collectionMap","render","match","props","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,EAAkBC,8BAAlB,QAAuD,+BAAvD;AACA,SAAQC,iBAAR,QAAgC,+BAAhC;;;AAEA,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAE7BS,sBAF6B,GAEJ,IAFI;AAAA;;AAI7BC,EAAAA,iBAAiB,GAAE;AAEf,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAOC,QAAP,IAAoB;AAE3C,YAAMC,aAAa,GAAGT,8BAA8B,CAACQ,QAAD,CAApD;AAED,KAJD;AASH;;AAKGE,EAAAA,MAAM,GAAG;AAEL,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKC,KAArB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAjC;AAAoC,QAAA,SAAS,EAAElB;AAA/C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEgB,KAAK,CAACE,IAAK,gBAA3B;AAA4C,QAAA,SAAS,EAAEhB;AAAvD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOX;;AAhCgC;;AAoCjC,MAAMiB,kBAAkB,GAAGC,QAAQ,KAAK;AAEpCd,EAAAA,iBAAiB,EAAGe,cAAc,IAAID,QAAQ,CAACd,iBAAD;AAFV,CAAL,CAAnC;;AAOA,eAAeC,QAAf","sourcesContent":["import React,{Component} from 'react';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component'\nimport {Route} from 'react-router-dom';\nimport CollectionPage from '../collection/collection.component';\nimport {connect} from 'react-redux';\nimport {firestore,convertCollectionSnapshotToMap} from '../../firebase/firebase.utlis';\nimport {updateCollections} from '../../redux/shop/shop.actions';\n\nclass ShopPage extends Component {\n   \n    unsubricbeFromSnapshot = null;\n   \n    componentDidMount(){\n      \n        const collectionRef = firestore.collection('collections');\n         \n        collectionRef.onSnapshot(async (snapshot) => {\n\n          const collectionMap = convertCollectionSnapshotToMap(snapshot);\n          \n        });\n      \n\n\n\n    }\n\n\n\n\n        render() {\n\n            const {match} = this.props;\n            return(\n                <div className=\"shop-page\">\n                    <Route exact path={`${match.path}`} component={CollectionsOverview}/>\n                    <Route path={`${match.path}/:collectionId`} component={CollectionPage}/>\n            </div>\n        )\n   \n}\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n\n    updateCollections : collectionsMap => dispatch(updateCollections)\n})\n\n\n\nexport default ShopPage;"]},"metadata":{},"sourceType":"module"}