{"ast":null,"code":"import { takeEvery } from \"@redux-saga/core/effects\";\nimport { ShopActionTypes } from './shop.types';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utlis';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"here\");\n  const collectionRef = firestore.collection('collections');\n  dispatch(fetchCollectionsStart());\n  collectionRef.get().then(snapshot => {\n    const collectionMap = convertCollectionSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionMap));\n  }).catch(error => {\n    dispatch(fetchCollectionsFailure(error.message));\n  });\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/home/qc/RayDcode/React/crwn-clothing/src/redux/shop/shop.saga.js"],"names":["takeEvery","ShopActionTypes","firestore","convertCollectionSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","dispatch","fetchCollectionsStart","get","then","snapshot","collectionMap","catch","error","message","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,0BAA1B;AAEA,SAAQC,eAAR,QAA8B,cAA9B;AAEA,SAASC,SAAT,EAAmBC,8BAAnB,QAAyD,+BAAzD;AAEA,SAAQC,uBAAR,EAAgCC,uBAAhC,QAA8D,gBAA9D;AAEA,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAMC,OAAO,CAACC,GAAR,CAAY,MAAZ,CAAN;AACA,QAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACMC,EAAAA,QAAQ,CAACC,qBAAqB,EAAtB,CAAR;AACFH,EAAAA,aAAa,CAACI,GAAd,GACCC,IADD,CACMC,QAAQ,IAAG;AAEV,UAAMC,aAAa,GAAGb,8BAA8B,CAACY,QAAD,CAApD;AACEJ,IAAAA,QAAQ,CAACP,uBAAuB,CAACY,aAAD,CAAxB,CAAR;AAEF,GANP,EAOCC,KAPD,CAOOC,KAAK,IAAG;AAEPP,IAAAA,QAAQ,CAACN,uBAAuB,CAACa,KAAK,CAACC,OAAP,CAAxB,CAAR;AAED,GAXP;AAYP;AAED,OAAO,UAAUP,qBAAV,GAAiC;AACpC,QAAMZ,SAAS,CACXC,eAAe,CAACmB,uBADL,EAC6Bd,qBAD7B,CAAf;AAGH","sourcesContent":["import { takeEvery } from \"@redux-saga/core/effects\";\n\nimport {ShopActionTypes} from './shop.types';\n\nimport { firestore,convertCollectionSnapshotToMap } from '../../firebase/firebase.utlis';\n\nimport {fetchCollectionsSuccess,fetchCollectionsFailure} from './shop.actions'\n\nexport function* fetchCollectionsAsync(){\n    yield console.log(\"here\");\n    const collectionRef = firestore.collection('collections');\n          dispatch(fetchCollectionsStart());\n        collectionRef.get()\n        .then(snapshot =>{\n\n               const collectionMap = convertCollectionSnapshotToMap(snapshot);\n                 dispatch(fetchCollectionsSuccess(collectionMap));\n         \n              })\n        .catch(error =>{\n\n                dispatch(fetchCollectionsFailure(error.message));\n                  \n              });\n}\n\nexport function* fetchCollectionsStart(){\n    yield takeEvery(\n        ShopActionTypes.FETCH_COLLECTIONS_START,fetchCollectionsAsync\n        );\n}"]},"metadata":{},"sourceType":"module"}