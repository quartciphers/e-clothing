{"ast":null,"code":"import { takeLatest, put, call, all } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { googleProvider, auth, createUserProfileDocument } from '../../firebase/firebase.utlis';\nimport { signInSuccess, signInFailure } from './user.actions';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    put(emailSignInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/home/qc/RayDcode/React/crwn-clothing/src/redux/user/user-sagas.js"],"names":["takeLatest","put","call","all","UserActionTypes","googleProvider","auth","createUserProfileDocument","signInSuccess","signInFailure","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","emailSignInSuccess","emailSignInFailure","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAyBC,IAAzB,EAA8BC,GAA9B,QAAyC,oBAAzC;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,cAAR,EAAuBC,IAAvB,EAA4BC,yBAA5B,QAA4D,+BAA5D;AACA,SAAQC,aAAR,EAAsBC,aAAtB,QAA0C,gBAA1C;AAEA,OAAO,UAAUC,gBAAV,GAA4B;AAE7B,MAAI;AACA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAML,IAAI,CAACM,eAAL,CAAqBP,cAArB,CAArB;AACA,UAAMQ,OAAO,GAAG,MAAOX,IAAI,CAACK,yBAAD,EAA2BI,IAA3B,CAA3B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CAACO,aAAa,CAAC;AAACQ,MAAAA,EAAE,EAACF,YAAY,CAACE,EAAjB;AAAoB,SAAGF,YAAY,CAACG,IAAb;AAAvB,KAAD,CAAd,CAAT;AAEH,GAND,CAME,OAAOC,KAAP,EAAc;AACZ,UAAMjB,GAAG,CAACQ,aAAa,CAACS,KAAD,CAAd,CAAT;AACH;AAEN;AAGD,OAAO,UAAUC,mBAAV,GAA+B;AAEpC,QAAMnB,UAAU,CAACI,eAAe,CAACgB,oBAAjB,EAAsCV,gBAAtC,CAAhB;AAED;AAID,OAAO,UAAUW,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAC;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP;AAAT,CAA1B,EAAqD;AAGxD,MAAI;AACA,UAAM;AAACb,MAAAA;AAAD,QAAS,MAAML,IAAI,CAACmB,0BAAL,CAAgCF,KAAhC,EAAsCC,QAAtC,CAArB;AACA,UAAMX,OAAO,GAAG,MAAOX,IAAI,CAACK,yBAAD,EAA2BI,IAA3B,CAA3B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CAACyB,kBAAkB,CAAC;AAACV,MAAAA,EAAE,EAACF,YAAY,CAACE,EAAjB;AAAoB,SAAGF,YAAY,CAACG,IAAb;AAAvB,KAAD,CAAnB,CAAT;AAEH,GAND,CAME,OAAOC,KAAP,EAAc;AACZjB,IAAAA,GAAG,CAAC0B,kBAAkB,CAACT,KAAD,CAAnB,CAAH;AACH;AAEJ;AAKD,OAAO,UAAUU,kBAAV,GAA8B;AACjC,QAAM5B,UAAU,CAACI,eAAe,CAACyB,mBAAjB,EAAqCR,eAArC,CAAhB;AACH;AAGD,OAAO,UAAUS,SAAV,GAAqB;AACxB,QAAM3B,GAAG,CAAC,CAACD,IAAI,CAACiB,mBAAD,CAAL,EAA2BjB,IAAI,CAAC0B,kBAAD,CAA/B,CAAD,CAAT;AACH","sourcesContent":["import {takeLatest ,put, call,all } from 'redux-saga/effects';\n\nimport UserActionTypes from './user.types';\nimport {googleProvider,auth,createUserProfileDocument} from '../../firebase/firebase.utlis';\nimport {signInSuccess,signInFailure} from './user.actions';\n\nexport function* signInWithGoogle(){\n  \n      try {\n          const {user} = yield auth.signInWithPopup(googleProvider);\n          const userRef = yield  call(createUserProfileDocument,user);\n          const userSnapshot = yield userRef.get();\n          yield put(signInSuccess({id:userSnapshot.id,...userSnapshot.data()}));\n\n      } catch (error) {\n          yield put(signInFailure(error));\n      }\n\n}\n\n\nexport function* onGoogleSignInStart(){\n\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START,signInWithGoogle);\n\n}\n\n\n\nexport function* signInWithEmail({payload:{email,password}}){\n \n\n    try {\n        const {user} = yield auth.signInWithEmailAndPassword(email,password);\n        const userRef = yield  call(createUserProfileDocument,user);\n        const userSnapshot = yield userRef.get();\n        yield put(emailSignInSuccess({id:userSnapshot.id,...userSnapshot.data()}));\n\n    } catch (error) {\n        put(emailSignInFailure(error))\n    }\n\n}\n\n\n\n\nexport function* onEmailSignInStart(){\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,signInWithEmail)\n}\n\n\nexport function* userSagas(){\n    yield all([call(onGoogleSignInStart),call(onEmailSignInStart)])\n}"]},"metadata":{},"sourceType":"module"}