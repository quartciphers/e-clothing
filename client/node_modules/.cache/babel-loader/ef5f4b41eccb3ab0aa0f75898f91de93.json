{"ast":null,"code":"import { takeEvery, call, put } from \"@redux-saga/core/effects\";\nimport { ShopActionTypes } from './shop.types';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utlis';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  try {\n    yield console.log(\"here\");\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  } //   dispatch(fetchCollectionsStart());\n  // collectionRef.get()\n  // .then(snapshot =>{\n  //        const collectionMap = convertCollectionSnapshotToMap(snapshot);\n  //          dispatch(fetchCollectionsSuccess(collectionMap));\n  //       })\n  // .catch(error =>{\n  //         dispatch(fetchCollectionsFailure(error.message));\n  //       });\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/home/qc/RayDcode/React/crwn-clothing/src/redux/shop/shop.saga.js"],"names":["takeEvery","call","put","ShopActionTypes","firestore","convertCollectionSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAmBC,IAAnB,EAAwBC,GAAxB,QAAmC,0BAAnC;AAEA,SAAQC,eAAR,QAA8B,cAA9B;AAEA,SAASC,SAAT,EAAmBC,8BAAnB,QAAyD,+BAAzD;AAEA,SAAQC,uBAAR,EAAgCC,uBAAhC,QAA8D,gBAA9D;AAEA,OAAO,UAAUC,qBAAV,GAAiC;AAErC,MAAI;AACH,UAAMC,OAAO,CAACC,GAAR,CAAY,MAAZ,CAAN;AACA,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAACI,8BAAD,EAAgCQ,QAAhC,CAAjC;AACA,UAAMX,GAAG,CAACI,uBAAuB,CAACS,cAAD,CAAxB,CAAT;AACA,GAND,CAME,OAAOC,KAAP,EAAc;AACZ,UAAMd,GAAG,CAACK,uBAAuB,CAACS,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH,GAVoC,CAahC;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;;AACP;AAED,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAMlB,SAAS,CACXG,eAAe,CAACgB,uBADL,EAC6BX,qBAD7B,CAAf;AAGH","sourcesContent":["import { takeEvery,call,put } from \"@redux-saga/core/effects\";\n\nimport {ShopActionTypes} from './shop.types';\n\nimport { firestore,convertCollectionSnapshotToMap } from '../../firebase/firebase.utlis';\n\nimport {fetchCollectionsSuccess,fetchCollectionsFailure} from './shop.actions'\n\nexport function* fetchCollectionsAsync(){\n\n   try {\n    yield console.log(\"here\");\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionSnapshotToMap,snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n   } catch (error) {\n       yield put(fetchCollectionsFailure(error.message));\n   }\n    \n     \n        //   dispatch(fetchCollectionsStart());\n        // collectionRef.get()\n        // .then(snapshot =>{\n\n        //        const collectionMap = convertCollectionSnapshotToMap(snapshot);\n        //          dispatch(fetchCollectionsSuccess(collectionMap));\n         \n        //       })\n        // .catch(error =>{\n\n        //         dispatch(fetchCollectionsFailure(error.message));\n                  \n        //       });\n}\n\nexport function* fetchCollectionsStart(){\n    yield takeEvery(\n        ShopActionTypes.FETCH_COLLECTIONS_START,fetchCollectionsAsync\n        );\n}"]},"metadata":{},"sourceType":"module"}