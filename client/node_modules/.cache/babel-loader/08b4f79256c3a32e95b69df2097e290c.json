{"ast":null,"code":"import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nconst config = {\n  apiKey: \"AIzaSyC-MgMfS3vyxVWOpIsW0wejF25RO_0YLe8\",\n  authDomain: \"e-clothing-6cb19.firebaseapp.com\",\n  projectId: \"e-clothing-6cb19\",\n  storageBucket: \"e-clothing-6cb19.appspot.com\",\n  messagingSenderId: \"870043130969\",\n  appId: \"1:870043130969:web:d64f4646de206d97a1e548\",\n  measurementId: \"G-9VHSRWY5KM\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) {\n    return;\n  }\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd, additionalData) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollection.reduce((accumlator, collection) => {\n    accumlator[collection.title.toLowerCase()] = collection;\n    return accumlator;\n  }, {});\n};\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport default firebase;","map":{"version":3,"sources":["/home/qc/RayDcode/React/crwn-clothing/src/firebase/firebase.utlis.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionSnapshotToMap","collections","transformedCollection","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","reduce","accumlator","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\n\nconst config = {\n    apiKey: \"AIzaSyC-MgMfS3vyxVWOpIsW0wejF25RO_0YLe8\",\n    authDomain: \"e-clothing-6cb19.firebaseapp.com\",\n    projectId: \"e-clothing-6cb19\",\n    storageBucket: \"e-clothing-6cb19.appspot.com\",\n    messagingSenderId: \"870043130969\",\n    appId: \"1:870043130969:web:d64f4646de206d97a1e548\",\n    measurementId: \"G-9VHSRWY5KM\"\n  };\n  \n\n  export const createUserProfileDocument = async (userAuth,additionalData) => {\n\n      if(!userAuth){\n         \n        return ;\n\n      }\n\n      const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n      const snapShot = await userRef.get()\n\n      if(!snapShot.exists){\n        const {displayName,email} = userAuth;\n        const createdAt = new Date();\n        try{\n          \n         await userRef.set({\n            displayName,\n            email,createdAt,\n            ...additionalData\n          });\n\n\n\n        }\n        catch(error){\n          console.log(error.message);\n        }\n      }\n\n\n\n      return userRef;\n      \n  };\n\n\n\n  export const  addCollectionAndDocuments = async (collectionKey,objectsToAdd,additionalData) =>{\n\n    const collectionRef = firestore.collection(collectionKey);\n\n  \n     const batch = firestore.batch();\n\n     objectsToAdd.forEach(obj => {\n       const newDocRef = collectionRef.doc();\n       batch.set(newDocRef,obj);\n     });\n\n     return await batch.commit();\n     \n\n  };\n\n\n  export const convertCollectionSnapshotToMap =(collections) =>{\n\n      \n    const transformedCollection = collections.docs.map(doc =>{\n       \n      const {title,items} = doc.data();\n\n      return{\n        routeName:encodeURI(title.toLowerCase()),\n        id:doc.id,\n        title,\n        items\n      }\n\n      \n\n    })\n\n   return  transformedCollection.reduce((accumlator,collection)=>{\n\n       accumlator[collection.title.toLowerCase()] = collection;\n       return accumlator;\n\n    },{})\n\n  }\n\n\n \n\n  export const getCurrentUser = ()=>{\n    return new Promise((resolve,reject)=>{\n     const unsubscribe = auth.onAuthStateChanged(userAuth =>{\n       unsubscribe();\n       resolve(userAuth);\n     },reject)\n    });\n  }\n\n\n\n  export const auth = firebase.auth();\n  export const firestore = firebase.firestore();\n\n  export const googleProvider = new firebase.auth.GoogleAuthProvider();\n  googleProvider.setCustomParameters({prompt:'select_account' });\n  export const signInWithGoogle =() => auth.signInWithPopup(googleProvider);\n\n  \n  export default firebase;"]},"metadata":{},"sourceType":"module"}