{"ast":null,"code":"import { ShopActionTypes } from './shop.types';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utlis';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionMap\n});\nexport const fetchCollectionsFailure = error => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: error\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionMap = convertCollectionSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionMap));\n    }).catch(error => {\n      dispatch(fetchCollectionsFailure(error.message));\n    });\n  };\n};","map":{"version":3,"sources":["/home/qc/RayDcode/React/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","error","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","message"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,cAA9B;AACA,SAASC,SAAT,EAAmBC,8BAAnB,QAAyD,+BAAzD;AAEA,OAAO,MAAOC,qBAAqB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADkB,CAAP,CAA/B;AAIP,OAAO,MAAMC,uBAAuB,GAAIC,aAAD,KAAoB;AAEtDH,EAAAA,IAAI,EAACJ,eAAe,CAACQ,yBAFiC;AAGtDC,EAAAA,OAAO,EAAEF;AAH6C,CAApB,CAAhC;AASP,OAAO,MAAMG,uBAAuB,GAAIC,KAAD,KAAY;AAEhDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBAF0B;AAGhDH,EAAAA,OAAO,EAAEE;AAHuC,CAAZ,CAAhC;AASP,OAAO,MAAME,0BAA0B,GAAE,MAAI;AAExC,SAAOC,QAAQ,IAAI;AAEd,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AACFY,IAAAA,aAAa,CAACE,GAAd,GACCC,IADD,CACMC,QAAQ,IAAG;AAET,YAAMZ,aAAa,GAAGL,8BAA8B,CAACiB,QAAD,CAApD;AACCL,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,aAAD,CAAxB,CAAR;AAEF,KANP,EAOOa,KAPP,CAOaT,KAAK,IAAG;AAEbG,MAAAA,QAAQ,CAACJ,uBAAuB,CAACC,KAAK,CAACU,OAAP,CAAxB,CAAR;AAGD,KAZP;AAgBF,GApBD;AAsBJ,CAxBM","sourcesContent":["import {ShopActionTypes} from './shop.types';\nimport { firestore,convertCollectionSnapshotToMap } from '../../firebase/firebase.utlis';\n\nexport const  fetchCollectionsStart = () => ({\n     type: ShopActionTypes.FETCH_COLLECTIONS_START,\n});\n\nexport const fetchCollectionsSuccess = (collectionMap) => ({\n  \n     type:ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n     payload: collectionMap\n\n\n});\n\n\nexport const fetchCollectionsFailure = (error) => ({\n\n   type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n   payload: error\n\n});\n\n\n\nexport const fetchCollectionsStartAsync =()=>{\n     \n     return dispatch => {\n\n          const collectionRef = firestore.collection('collections');\n          dispatch(fetchCollectionsStart());\n        collectionRef.get()\n        .then(snapshot =>{\n\n                const collectionMap = convertCollectionSnapshotToMap(snapshot);\n                 dispatch(fetchCollectionsSuccess(collectionMap));\n         \n              })\n              .catch(error =>{\n\n                dispatch(fetchCollectionsFailure(error.message));\n                  \n\n              })\n              \n              ;\n\n     }\n\n}\n\n"]},"metadata":{},"sourceType":"module"}