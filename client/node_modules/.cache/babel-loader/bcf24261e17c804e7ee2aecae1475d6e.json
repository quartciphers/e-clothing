{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport createSagaMiddleware from '@redux-saga/core';\nimport RootSaga from './root-saga';\nimport rootReducer from './root-reducer';\nimport { persistStore } from 'redux-persist';\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV !== 'production') {\n  middlewares.push(logger);\n}\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(fetchCollectionsStart);\nconst persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"sources":["/home/qc/RayDcode/React/crwn-clothing/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","createSagaMiddleware","RootSaga","rootReducer","persistStore","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","fetchCollectionsStart","persistor"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAGA,OAAOC,oBAAP,MAAiC,kBAAjC;AACA,OAAOC,QAAP,MAAqB,aAArB;AAGA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAAQC,YAAR,QAA2B,eAA3B;AAGA,MAAMC,cAAc,GAAGJ,oBAAoB,EAA3C;AAEA,MAAMK,WAAW,GAAG,CAACD,cAAD,CAApB;;AAGA,IAAGE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA5B,EAAyC;AACrCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBV,MAAjB;AACH;;AAGA,MAAMW,KAAK,GAAGb,WAAW,CAACK,WAAD,EACtBJ,eAAe,CAAC,GAAGO,WAAJ,CADO,CAAzB;AAGAD,cAAc,CAACO,GAAf,CAAmBC,qBAAnB;AAED,MAAMC,SAAS,GAAGV,YAAY,CAACO,KAAD,CAA9B;AAEA,SAASA,KAAT,EAAeG,SAAf","sourcesContent":["import {createStore ,applyMiddleware} from 'redux';\nimport logger from 'redux-logger';\n\n\nimport createSagaMiddleware from '@redux-saga/core';\nimport RootSaga from './root-saga';\n\n\nimport rootReducer from './root-reducer';\nimport {persistStore} from 'redux-persist';\n\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\n\nif(process.env.NODE_ENV !== 'production'){\n    middlewares.push(logger)\n}\n\n\n const store = createStore(rootReducer,\n    applyMiddleware(...middlewares));\n\n sagaMiddleware.run(fetchCollectionsStart)   \n\nconst persistor = persistStore(store);\n\nexport  {store,persistor};\n\n\n\n"]},"metadata":{},"sourceType":"module"}