{"ast":null,"code":"import { ShopActionTypes } from './shop.types';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utlis';\nexport const fetchCollectionsStart = collectionMap => ({\n  type: ShopActionTypes.UPDATE_COLLECTIONS,\n  payload: collectionMap\n});\nexport const fetchCollectionsSuccess = collectionMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionMap\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    collectionRef.get().then(snapshot => {\n      const collectionMap = convertCollectionSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsStart()); //   updateCollections(collectionMap);\n\n      this.setState({\n        loading: false\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/home/qc/RayDcode/React/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionSnapshotToMap","fetchCollectionsStart","collectionMap","type","UPDATE_COLLECTIONS","payload","fetchCollectionsSuccess","FETCH_COLLECTIONS_SUCCESS","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","setState","loading"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,cAA9B;AACA,SAASC,SAAT,EAAmBC,8BAAnB,QAAyD,+BAAzD;AAGA,OAAO,MAAOC,qBAAqB,GAAIC,aAAD,KAAoB;AAErDC,EAAAA,IAAI,EAAEL,eAAe,CAACM,kBAF+B;AAGrDC,EAAAA,OAAO,EAAEH;AAH4C,CAApB,CAA/B;AAOP,OAAO,MAAMI,uBAAuB,GAAIJ,aAAD,KAAoB;AAEtDC,EAAAA,IAAI,EAACL,eAAe,CAACS,yBAFiC;AAGtDF,EAAAA,OAAO,EAAEH;AAH6C,CAApB,CAAhC;AAUP,OAAO,MAAMM,0BAA0B,GAAE,MAAI;AAExC,SAAOC,QAAQ,IAAI;AAEd,UAAMC,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAtB;AAEFD,IAAAA,aAAa,CAACE,GAAd,GACCC,IADD,CACMC,QAAQ,IAAG;AAET,YAAMZ,aAAa,GAAGF,8BAA8B,CAACc,QAAD,CAApD;AACAL,MAAAA,QAAQ,CAACR,qBAAqB,EAAtB,CAAR,CAHS,CAIV;;AACE,WAAKc,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAC;AAAT,OAAd;AACF,KAPP;AASF,GAbD;AAeJ,CAjBM","sourcesContent":["import {ShopActionTypes} from './shop.types';\nimport { firestore,convertCollectionSnapshotToMap } from '../../firebase/firebase.utlis';\n\n\nexport const  fetchCollectionsStart = (collectionMap) => ({\n    \n     type: ShopActionTypes.UPDATE_COLLECTIONS,\n     payload: collectionMap\n\n});\n\nexport const fetchCollectionsSuccess = (collectionMap) => ({\n  \n     type:ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n     payload: collectionMap\n\n\n})\n\n\n\nexport const fetchCollectionsStartAsync =()=>{\n     \n     return dispatch => {\n\n          const collectionRef = firestore.collection('collections');\n         \n        collectionRef.get()\n        .then(snapshot =>{\n\n                const collectionMap = convertCollectionSnapshotToMap(snapshot);\n                dispatch(fetchCollectionsStart());\n               //   updateCollections(collectionMap);\n                 this.setState({loading:false});\n              });\n\n     }\n\n}\n\n"]},"metadata":{},"sourceType":"module"}